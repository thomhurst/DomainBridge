using System;
using System.Threading.Tasks;
using DomainBridge;
using TUnit.Assertions;
using TUnit.Core;

namespace DomainBridge.Tests
{
    // This class is returned by a bridge method but doesn't have its own explicit bridge
    [Serializable]
    public class AutoGeneratedType
    {
        public string Value { get; set; } = "Auto-generated bridge works!";
        public int Count { get; set; } = 42;
    }
    
    // This service returns types that should have bridges auto-generated
    public class ServiceWithAutoGeneratedReturns
    {
        public AutoGeneratedType GetAutoType() => new AutoGeneratedType();
        
        public AutoGeneratedType[] GetAutoTypeArray() => new[]
        {
            new AutoGeneratedType { Value = "First", Count = 1 },
            new AutoGeneratedType { Value = "Second", Count = 2 }
        };
    }
    
    // Only this bridge is explicitly defined
    [DomainBridge(typeof(ServiceWithAutoGeneratedReturns))]
    public partial class ServiceWithAutoGeneratedReturnsBridge { }
    
    public class AutoBridgeGenerationTests
    {
        [Test]
        public async Task AutoGeneratesBridgeForReturnType()
        {
            // The service bridge is explicitly defined, but AutoGeneratedType bridge should be auto-generated
            var service = ServiceWithAutoGeneratedReturnsBridge.CreateIsolated();
            
            // This should return an AutoGeneratedTypeBridge instance, not dynamic
            var result = service.GetAutoType();
            
            // We should be able to access properties through the auto-generated bridge
            await Assert.That((object)result.Value).IsEqualTo("Auto-generated bridge works!");
            await Assert.That((object)result.Count).IsEqualTo(42);
            
            ServiceWithAutoGeneratedReturnsBridge.UnloadDomain();
        }
        
        [Test]
        public async Task AutoGeneratesBridgeForArrayReturnType()
        {
            var service = ServiceWithAutoGeneratedReturnsBridge.CreateIsolated();
            
            // This should return an array of AutoGeneratedTypeBridge instances
            var results = service.GetAutoTypeArray();
            
            await Assert.That(results).IsNotNull();
            await Assert.That(results.Length).IsEqualTo(2);
            await Assert.That((object)results[0].Value).IsEqualTo("First");
            await Assert.That((object)results[0].Count).IsEqualTo(1);
            await Assert.That((object)results[1].Value).IsEqualTo("Second");
            await Assert.That((object)results[1].Count).IsEqualTo(2);
            
            ServiceWithAutoGeneratedReturnsBridge.UnloadDomain();
        }
        
        [Test, DependsOn(nameof(AutoGeneratesBridgeForReturnType)), DependsOn(nameof(AutoGeneratesBridgeForArrayReturnType))]
        public async Task CleanupTest()
        {
            // This test runs last to ensure cleanup
            await Task.CompletedTask;
        }
    }
}